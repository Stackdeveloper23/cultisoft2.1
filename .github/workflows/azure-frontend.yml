# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: frontendCultisoft    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: './frontend'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20'    
  APP_URL: "https://frontendcultisoft-beekhmbhhvcmgegq.eastus-01.azurewebsites.net" # set this to the node version to use

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./cultisoft2.1/frontend
        file: ./cultisoft2.1/frontend/Dockerfile
        push: true
        tags: cultisoft2.1/frontend:latest
        # Reemplaza `your-docker-repo/your-image-name` con tu repositorio e imagen Docker.

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to Azure Web App for Containers
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        images: cultisoft2.1/frontend:latest
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE_FR0NTEND }}
    
